/*! For license information please see main.b5cac082e7c9f67e7ef9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/normalize-wheel/index.js"),a=s.n(n),l=s("./node_modules/prefix/index.js"),o=s.n(l),r=s("./node_modules/lodash/each.js"),h=s.n(r),m=s("./app/animations/Label.js"),u=s("./app/animations/Paragraph.js"),d=s("./app/animations/Title.js");class c{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t,animationsTitles:"[data-animation='title']",animationsParagraphs:"[data-animation='paragraph']",animationsLabels:"[data-animation='label']"},this.id=s,this.transformPrefix=o()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},h()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))})),this.createAnimations()}createAnimations(){this.animations=[],this.animationsTitles=h()(this.elements.animationsTitles,(e=>new d.default({element:e}))),this.animations.push(...this.animationsTitles),this.animationsParagraphs=h()(this.elements.animationsParagraphs,(e=>new u.default({element:e}))),this.animations.push(...this.animationsParagraphs),this.animationsLabels=h()(this.elements.animationsLabels,(e=>new m.default({element:e}))),this.animations.push(...this.animationsLabels)}show(){return new Promise((e=>{this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight),h()(this.animations,(e=>e.onResize()))}onMouseWheel(e){const{pixelY:t}=a()(e);this.scroll.target+=t}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"763e791a77a2775467e3"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,