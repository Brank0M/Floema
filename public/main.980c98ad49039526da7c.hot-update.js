/*! For license information please see main.980c98ad49039526da7c.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Media.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),r=s("./node_modules/gsap/index.js"),n=s("./app/shaders/plane-fragment.glsl"),o=s("./app/shaders/plane-vertex.glsl");class d{constructor({element:e,geometry:t,gl:s,index:i,scene:h,sizes:a}){this.element=e,this.geometry=t,this.gl=s,this.index=i,this.scene=h,this.sizes=a,this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){this.texture=new i.Texture(this.gl),this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=this.element.getAttribute("data-src"),this.image.onload=()=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:n,vertex:o,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.rotation.z=r.default.utils.random(.03*-Math.PI,.03*Math.PI)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.updateScale(e),this.updateX(),this.updateY()}onResize(e,t){this.extra={x:0,y:0},this.createBounds(e),this.updateX(t.x?t.x:0),this.updateY(t.y?t.y:0)}updateScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}updateX(e=0){this.x=(this.bounds.left+e)/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width+this.extra.x}updateY(e=0){this.y=(this.bounds.top+e)/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height+this.extra.y}update(e){this.bounds&&(this.updateX(e.x),this.updateY(e.y))}}}},(function(e){e.h=()=>"5861afad12b6772ffe82"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFJLEVBQU1OLEtBQUtNLEVBQUlOLEtBQUtELE1BQU13QyxPQUFVdkMsS0FBS0ksTUFBTUUsQ0FDdkgsQ0FFQXlDLE9BQU9ULEdBQ0F0QyxLQUFLZ0MsU0FFVmhDLEtBQUttQyxRQUFRRyxFQUFPakMsR0FDcEJMLEtBQUtvQyxRQUFRRSxFQUFPaEMsR0FDdEIsa0JDaEhGMEMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9NZWRpYS5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc2gsIFByb2dyYW0sIFRleHR1cmUgfSBmcm9tIFwib2dsXCI7XHJcbmltcG9ydCBHU0FQIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCBmcmFnbWVudCBmcm9tIFwic2hhZGVycy9wbGFuZS1mcmFnbWVudC5nbHNsXCI7XHJcbmltcG9ydCB2ZXJ0ZXggZnJvbSBcInNoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2xcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lZGlhIHtcclxuICBjb25zdHJ1Y3Rvcih7IGVsZW1lbnQsIGdlb21ldHJ5LCBnbCwgaW5kZXgsIHNjZW5lLCBzaXplcyB9KSB7XHJcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgdGhpcy5nZW9tZXRyeSA9IGdlb21ldHJ5O1xyXG4gICAgdGhpcy5nbCA9IGdsO1xyXG4gICAgdGhpcy5pbmRleCA9IGluZGV4O1xyXG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xyXG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xyXG5cclxuICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpO1xyXG4gICAgdGhpcy5jcmVhdGVQcm9ncmFtKCk7XHJcbiAgICB0aGlzLmNyZWF0ZU1lc2goKTtcclxuXHJcbiAgICB0aGlzLmV4dHJhID0ge1xyXG4gICAgICB4OiAwLFxyXG4gICAgICB5OiAwLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZVRleHR1cmUoKSB7XHJcbiAgICB0aGlzLnRleHR1cmUgPSBuZXcgVGV4dHVyZSh0aGlzLmdsKTtcclxuXHJcbiAgICB0aGlzLmltYWdlID0gbmV3IHdpbmRvdy5JbWFnZSgpO1xyXG4gICAgdGhpcy5pbWFnZS5jcm9zc09yaWdpbiA9IFwiYW5vbnltb3VzXCI7XHJcblxyXG4gICAgdGhpcy5pbWFnZS5zcmMgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNcIik7XHJcbiAgICB0aGlzLmltYWdlLm9ubG9hZCA9ICgpID0+ICh0aGlzLnRleHR1cmUuaW1hZ2UgPSB0aGlzLmltYWdlKTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZVByb2dyYW0oKSB7XHJcbiAgICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XHJcbiAgICAgIGZyYWdtZW50LFxyXG4gICAgICB2ZXJ0ZXgsXHJcbiAgICAgIHVuaWZvcm1zOiB7XHJcbiAgICAgICAgdE1hcDogeyB2YWx1ZTogdGhpcy50ZXh0dXJlIH0sXHJcbiAgICAgICAgLy8gdUFscGhhOiB7IHZhbHVlOiAwIH0sXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNyZWF0ZU1lc2goKSB7XHJcbiAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XHJcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxyXG4gICAgICBwcm9ncmFtOiB0aGlzLnByb2dyYW0sXHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xyXG5cclxuICAgIHRoaXMubWVzaC5yb3RhdGlvbi56ID0gR1NBUC51dGlscy5yYW5kb20oLU1hdGguUEkgKiAwLjAzLCBNYXRoLlBJICogMC4wMyk7XHJcbiAgICAvLyB0aGlzLm1lc2guc2NhbGUueCA9IDI7XHJcblxyXG4gICAgLy8gdGhpcy5tZXNoLnBvc2l0aW9uLnggKz0gdGhpcy5pbmRleCArIHRoaXMubWVzaC5zY2FsZS54OyAvLyB0aW1lIDIzOjE5IG9mIHRoZSB2aWRlb1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlQm91bmRzKHsgc2l6ZXMgfSkge1xyXG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xyXG4gICAgdGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgdGhpcy51cGRhdGVTY2FsZShzaXplcyk7XHJcbiAgICB0aGlzLnVwZGF0ZVgoKTtcclxuICAgIHRoaXMudXBkYXRlWSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRXZlbnRzLlxyXG4gICAqL1xyXG4gIG9uUmVzaXplKHNpemVzLCBzY3JvbGwpIHtcclxuXHJcbiAgICB0aGlzLmV4dHJhID0ge1xyXG4gICAgICB4OiAwLFxyXG4gICAgICB5OiAwLFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmNyZWF0ZUJvdW5kcyhzaXplcyk7XHJcbiAgICB0aGlzLnVwZGF0ZVgoc2Nyb2xsLnggPyBzY3JvbGwueCA6IDApO1xyXG4gICAgdGhpcy51cGRhdGVZKHNjcm9sbC55ID8gc2Nyb2xsLnkgOiAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExvb3AuXHJcbiAgICovXHJcblxyXG4gIHVwZGF0ZVNjYWxlKCkge1xyXG4gICAgdGhpcy5oZWlnaHQgPSB0aGlzLmJvdW5kcy5oZWlnaHQgLyB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcbiAgICB0aGlzLndpZHRoID0gdGhpcy5ib3VuZHMud2lkdGggLyB3aW5kb3cuaW5uZXJXaWR0aDtcclxuXHJcbiAgICB0aGlzLm1lc2guc2NhbGUueCA9IHRoaXMuc2l6ZXMud2lkdGggKiB0aGlzLndpZHRoO1xyXG4gICAgdGhpcy5tZXNoLnNjYWxlLnkgPSB0aGlzLnNpemVzLmhlaWdodCAqIHRoaXMuaGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlWCh4ID0gMCkge1xyXG4gICAgdGhpcy54ID0gKHRoaXMuYm91bmRzLmxlZnQgKyB4KSAvIHdpbmRvdy5pbm5lcldpZHRoXHJcblxyXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPSAoLXRoaXMuc2l6ZXMud2lkdGggLyAyKSArICh0aGlzLm1lc2guc2NhbGUueCAvIDIpICsgKHRoaXMueCAqIHRoaXMuc2l6ZXMud2lkdGgpICsgdGhpcy5leHRyYS54O1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlWSh5ID0gMCkge1xyXG4gICAgdGhpcy55ID0gKHRoaXMuYm91bmRzLnRvcCArIHkpIC8gd2luZG93LmlubmVySGVpZ2h0O1xyXG5cclxuICAgIHRoaXMubWVzaC5wb3NpdGlvbi55ID0gKHRoaXMuc2l6ZXMuaGVpZ2h0IC8gMikgLSAodGhpcy5tZXNoLnNjYWxlLnkgLyAyKSAtICh0aGlzLnkgKiB0aGlzLnNpemVzLmhlaWdodCkgKyB0aGlzLmV4dHJhLnk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoc2Nyb2xsKSB7XHJcbiAgICBpZiAoIXRoaXMuYm91bmRzKSByZXR1cm47XHJcblxyXG4gICAgdGhpcy51cGRhdGVYKHNjcm9sbC54KTtcclxuICAgIHRoaXMudXBkYXRlWShzY3JvbGwueSk7XHJcbiAgfVxyXG59XHJcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjU4NjFhZmFkMTJiNjc3MmZmZTgyXCIpIl0sIm5hbWVzIjpbIk1lZGlhIiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiZ2VvbWV0cnkiLCJnbCIsImluZGV4Iiwic2NlbmUiLCJzaXplcyIsInRoaXMiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJleHRyYSIsIngiLCJ5IiwidGV4dHVyZSIsIlRleHR1cmUiLCJpbWFnZSIsIndpbmRvdyIsIkltYWdlIiwiY3Jvc3NPcmlnaW4iLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJvbmxvYWQiLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ0TWFwIiwidmFsdWUiLCJtZXNoIiwiTWVzaCIsInNldFBhcmVudCIsInJvdGF0aW9uIiwieiIsIkdTQVAiLCJNYXRoIiwiUEkiLCJjcmVhdGVCb3VuZHMiLCJib3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ1cGRhdGVTY2FsZSIsInVwZGF0ZVgiLCJ1cGRhdGVZIiwib25SZXNpemUiLCJzY3JvbGwiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsIndpZHRoIiwiaW5uZXJXaWR0aCIsInNjYWxlIiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwidXBkYXRlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9