/*! For license information please see main.0e0d9f851b0ac5047712.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var n=s("./node_modules/gsap/index.js"),a=s("./app/classes/Component.js"),o=s("./node_modules/lodash/each.js"),i=s.n(o),l=s("./node_modules/ogl/src/core/Texture.js"),r=s("./app/utils/text.js");class d extends a.default{constructor({canvas:e}){super({element:".preloader",elements:{title:".preloader_text",number:".preloader_number",numberText:".preloader_number_text"}}),this.canvas=e,window.TEXTURES={},(0,r.split)({element:this.elements.title,expression:"<br>"}),(0,r.split)({element:this.elements.title,expression:"<br>"}),this.elements.titleSpans=this.elements.title.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){i()(window.ASSETS,(e=>{const t=new l.Texture(this.canvas.gl,{generateMipmaps:!1}),s=new window.Image;s.crossOrigin="anonymous",s.src=e,s.onload=n=>{t.image=s,this.onAssetLoaded(e)},window.TEXTURES[e]=t}))}onAssetLoaded(e){this.length+=1;const t=this.length/window.ASSETS.length;this.elements.numberText.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.emit("completed"),this.animateOut=n.default.timeline({delay:1}),this.animateOut.to(this.elements.titleSpans,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"}),this.animateOut.to(this.elements.numberText,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"},"-=1.4"),this.animateOut.to(this.element,{autoAlpha:0,duration:1}),this.animateOut.call((t=>{this.destroy(),e()}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"317573624127fa2d1166"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4wZTBkOWY4NTFiMGFjNTA0NzcxMi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7MFRBTWUsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ3JDQyxhQUFZLE9BQUVDLElBQ1pDLE1BQU0sQ0FDSkMsUUFBUyxhQUNUQyxTQUFVLENBQ1JDLE1BQU8sa0JBQ1BDLE9BQVEsb0JBQ1JDLFdBQVksNEJBS2hCQyxLQUFLUCxPQUFTQSxFQUVkUSxPQUFPQyxTQUFXLENBQUMsR0FFbkJDLEVBQUFBLEVBQUFBLE9BQU0sQ0FDSlIsUUFBU0ssS0FBS0osU0FBU0MsTUFDdkJPLFdBQVksVUFHZEQsRUFBQUEsRUFBQUEsT0FBTSxDQUNKUixRQUFTSyxLQUFLSixTQUFTQyxNQUN2Qk8sV0FBWSxTQUdkSixLQUFLSixTQUFTUyxXQUNaTCxLQUFLSixTQUFTQyxNQUFNUyxpQkFBaUIsYUFFdkNOLEtBQUtPLE9BQVMsRUFJZFAsS0FBS1EsY0FFUCxDQUVBQSxlQU1FQyxJQUFLUixPQUFPUyxRQUFTQyxJQUNuQixNQUFNQyxFQUFVLElBQUlDLEVBQUFBLFFBQVFiLEtBQUtQLE9BQU9xQixHQUFJLENBQzFDQyxpQkFBaUIsSUFHYkMsRUFBUSxJQUFJZixPQUFPZ0IsTUFFekJELEVBQU1FLFlBQWMsWUFDcEJGLEVBQU1HLElBQU1SLEVBQ1pLLEVBQU1JLE9BQVVDLElBQ2RULEVBQVFELE1BQVFLLEVBRWhCaEIsS0FBS3NCLGNBQWNYLEVBQU0sRUFHM0JWLE9BQU9DLFNBQVNTLEdBQVNDLENBQU8sR0FNcEMsQ0FFQVUsY0FBY1gsR0FDWlgsS0FBS08sUUFBVSxFQUdmLE1BQU1nQixFQUFVdkIsS0FBS08sT0FBU04sT0FBT1MsT0FBT0gsT0FDNUNQLEtBQUtKLFNBQVNHLFdBQVd5QixVQUFhLEdBQUVDLEtBQUtDLE1BQWdCLElBQVZILE1BRW5DLElBQVpBLEdBQ0Z2QixLQUFLMkIsVUFFVCxDQUVBQSxXQUNFLE9BQU8sSUFBSUMsU0FBU0MsSUFFbEI3QixLQUFLOEIsS0FBSyxhQUdWOUIsS0FBSytCLFdBQWFDLEVBQUFBLFFBQUFBLFNBQWMsQ0FDOUJDLE1BQU8sSUFHVGpDLEtBQUsrQixXQUFXRyxHQUFHbEMsS0FBS0osU0FBU1MsV0FBWSxDQUMzQzhCLFNBQVUsSUFDVkMsS0FBTSxXQUNOQyxRQUFTLEdBQ1RDLEVBQUcsU0FHTHRDLEtBQUsrQixXQUFXRyxHQUNkbEMsS0FBS0osU0FBU0csV0FDZCxDQUNFb0MsU0FBVSxJQUNWQyxLQUFNLFdBQ05DLFFBQVMsR0FDVEMsRUFBRyxRQUVMLFNBR0Z0QyxLQUFLK0IsV0FBV0csR0FDZGxDLEtBQUtMLFFBQ0wsQ0FDRTRDLFVBQVcsRUFDWEosU0FBVSxJQVFkbkMsS0FBSytCLFdBQVdTLE1BQU1uQixJQUNwQnJCLEtBQUt5QyxVQUNMWixHQUFTLEdBQ1QsR0FFTixDQUVBWSxVQUNFekMsS0FBS0wsUUFBUStDLFdBQVdDLFlBQVkzQyxLQUFLTCxRQUMzQyxrQkNySUZpRCxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvUHJlbG9hZGVyLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdTQVAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IENvbXBvbmVudCBmcm9tIFwiY2xhc3Nlcy9Db21wb25lbnRcIjtcclxuaW1wb3J0IGVhY2ggZnJvbSBcImxvZGFzaC9lYWNoXCI7XHJcbmltcG9ydCB7IFRleHR1cmUgfSBmcm9tIFwib2dsXCI7XHJcbmltcG9ydCB7IHNwbGl0IH0gZnJvbSBcInV0aWxzL3RleHRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWxvYWRlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IoeyBjYW52YXMgfSkge1xyXG4gICAgc3VwZXIoe1xyXG4gICAgICBlbGVtZW50OiBcIi5wcmVsb2FkZXJcIixcclxuICAgICAgZWxlbWVudHM6IHtcclxuICAgICAgICB0aXRsZTogXCIucHJlbG9hZGVyX3RleHRcIixcclxuICAgICAgICBudW1iZXI6IFwiLnByZWxvYWRlcl9udW1iZXJcIixcclxuICAgICAgICBudW1iZXJUZXh0OiBcIi5wcmVsb2FkZXJfbnVtYmVyX3RleHRcIixcclxuICAgICAgICAvLyBpbWFnZXM6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbWdcIiksXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuXHJcbiAgICB3aW5kb3cuVEVYVFVSRVMgPSB7fTtcclxuXHJcbiAgICBzcGxpdCh7XHJcbiAgICAgIGVsZW1lbnQ6IHRoaXMuZWxlbWVudHMudGl0bGUsXHJcbiAgICAgIGV4cHJlc3Npb246IFwiPGJyPlwiLFxyXG4gICAgfSk7XHJcblxyXG4gICAgc3BsaXQoe1xyXG4gICAgICBlbGVtZW50OiB0aGlzLmVsZW1lbnRzLnRpdGxlLFxyXG4gICAgICBleHByZXNzaW9uOiBcIjxicj5cIixcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuZWxlbWVudHMudGl0bGVTcGFucyA9XHJcbiAgICAgIHRoaXMuZWxlbWVudHMudGl0bGUucXVlcnlTZWxlY3RvckFsbChcInNwYW4gc3BhblwiKTtcclxuXHJcbiAgICB0aGlzLmxlbmd0aCA9IDA7XHJcblxyXG4gICAgLy8gY29uc29sZS5sb2codGhpcy5lbGVtZW50LCB0aGlzLmVsZW1lbnRzKTtcclxuXHJcbiAgICB0aGlzLmNyZWF0ZUxvYWRlcigpO1xyXG5cclxuICB9XHJcblxyXG4gIGNyZWF0ZUxvYWRlcigpIHtcclxuICAgIC8vIHdpbmRvdy5BU1NFVFMuZm9yRWFjaChpbWFnZSA9PiB7XHJcbiAgICAvLyAgIGNvbnN0IHRleHR1cmUgPSBuZXcgVGV4dHVyZSh0aGlzLmNhbnZhcy5nbCwge1xyXG4gICAgLy8gICAgIGdlbmVyYXRlTWlwbWFwczogZmFsc2UsXHJcbiAgICAvLyAgIH0pO1xyXG5cclxuICAgIGVhY2god2luZG93LkFTU0VUUywgKGltYWdlKSA9PiB7XHJcbiAgICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgVGV4dHVyZSh0aGlzLmNhbnZhcy5nbCwge1xyXG4gICAgICAgIGdlbmVyYXRlTWlwbWFwczogZmFsc2UsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY29uc3QgbWVkaWEgPSBuZXcgd2luZG93LkltYWdlKCk7XHJcblxyXG4gICAgICBtZWRpYS5jcm9zc09yaWdpbiA9IFwiYW5vbnltb3VzXCI7XHJcbiAgICAgIG1lZGlhLnNyYyA9IGltYWdlO1xyXG4gICAgICBtZWRpYS5vbmxvYWQgPSAoXykgPT4ge1xyXG4gICAgICAgIHRleHR1cmUuaW1hZ2UgPSBtZWRpYTtcclxuXHJcbiAgICAgICAgdGhpcy5vbkFzc2V0TG9hZGVkKGltYWdlKTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHdpbmRvdy5URVhUVVJFU1tpbWFnZV0gPSB0ZXh0dXJlO1xyXG4gICAgfSk7XHJcbiAgICAvLyBlYWNoKHRoaXMuZWxlbWVudHMuaW1hZ2VzLCAoZWxlbWVudCkgPT4ge1xyXG4gICAgLy8gICBlbGVtZW50Lm9ubG9hZCA9IChfKSA9PiB0aGlzLm9uQXNzZXRMb2FkZWQoZWxlbWVudCk7XHJcbiAgICAvLyAgIGVsZW1lbnQuc3JjID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKTtcclxuICAgIC8vIH0pO1xyXG4gIH1cclxuXHJcbiAgb25Bc3NldExvYWRlZChpbWFnZSkge1xyXG4gICAgdGhpcy5sZW5ndGggKz0gMTtcclxuXHJcbiAgICAvLyBjb25zdCBwZXJjZW50ID0gdGhpcy5sZW5ndGggLyB0aGlzLmVsZW1lbnRzLmltYWdlcy5sZW5ndGg7XHJcbiAgICBjb25zdCBwZXJjZW50ID0gdGhpcy5sZW5ndGggLyB3aW5kb3cuQVNTRVRTLmxlbmd0aDtcclxuICAgIHRoaXMuZWxlbWVudHMubnVtYmVyVGV4dC5pbm5lckhUTUwgPSBgJHtNYXRoLnJvdW5kKHBlcmNlbnQgKiAxMDApfSVgO1xyXG5cclxuICAgIGlmIChwZXJjZW50ID09PSAxKSB7XHJcbiAgICAgIHRoaXMub25Mb2FkZWQoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uTG9hZGVkKCkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgIC8vIHRoaXMuYW5pbWF0ZU91dC5jYWxsKChfKSA9PiB7XHJcbiAgICAgIHRoaXMuZW1pdChcImNvbXBsZXRlZFwiKTtcclxuICAgICAgLy8gfSk7XHJcblxyXG4gICAgICB0aGlzLmFuaW1hdGVPdXQgPSBHU0FQLnRpbWVsaW5lKHtcclxuICAgICAgICBkZWxheTogMSxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50cy50aXRsZVNwYW5zLCB7XHJcbiAgICAgICAgZHVyYXRpb246IDEuNSxcclxuICAgICAgICBlYXNlOiBcImV4cG8ub3V0XCIsXHJcbiAgICAgICAgc3RhZ2dlcjogMC4xLFxyXG4gICAgICAgIHk6IFwiMTAwJVwiLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRoaXMuYW5pbWF0ZU91dC50byhcclxuICAgICAgICB0aGlzLmVsZW1lbnRzLm51bWJlclRleHQsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgZHVyYXRpb246IDEuNSxcclxuICAgICAgICAgIGVhc2U6IFwiZXhwby5vdXRcIixcclxuICAgICAgICAgIHN0YWdnZXI6IDAuMSxcclxuICAgICAgICAgIHk6IFwiMTAwJVwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXCItPTEuNFwiXHJcbiAgICAgICk7XHJcblxyXG4gICAgICB0aGlzLmFuaW1hdGVPdXQudG8oXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGF1dG9BbHBoYTogMCxcclxuICAgICAgICAgIGR1cmF0aW9uOiAxLFxyXG4gICAgICAgICAgLy8gZWFzZTogXCJleHBvLm91dFwiLFxyXG4gICAgICAgICAgLy8gc2NhbGVZOiAwLFxyXG4gICAgICAgICAgLy8gdHJhbnNmb3JtT3JpZ2luOiBcIjEwMCUgMTAwJVwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy8gXCItPTFcIlxyXG4gICAgICApO1xyXG5cclxuICAgICAgdGhpcy5hbmltYXRlT3V0LmNhbGwoKF8pID0+IHtcclxuICAgICAgICB0aGlzLmRlc3Ryb3koKTtcclxuICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBkZXN0cm95KCkge1xyXG4gICAgdGhpcy5lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KTtcclxuICB9XHJcbn1cclxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiMzE3NTczNjI0MTI3ZmEyZDExNjZcIikiXSwibmFtZXMiOlsiUHJlbG9hZGVyIiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJjYW52YXMiLCJzdXBlciIsImVsZW1lbnQiLCJlbGVtZW50cyIsInRpdGxlIiwibnVtYmVyIiwibnVtYmVyVGV4dCIsInRoaXMiLCJ3aW5kb3ciLCJURVhUVVJFUyIsInNwbGl0IiwiZXhwcmVzc2lvbiIsInRpdGxlU3BhbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiY3JlYXRlTG9hZGVyIiwiZWFjaCIsIkFTU0VUUyIsImltYWdlIiwidGV4dHVyZSIsIlRleHR1cmUiLCJnbCIsImdlbmVyYXRlTWlwbWFwcyIsIm1lZGlhIiwiSW1hZ2UiLCJjcm9zc09yaWdpbiIsInNyYyIsIm9ubG9hZCIsIl8iLCJvbkFzc2V0TG9hZGVkIiwicGVyY2VudCIsImlubmVySFRNTCIsIk1hdGgiLCJyb3VuZCIsIm9uTG9hZGVkIiwiUHJvbWlzZSIsInJlc29sdmUiLCJlbWl0IiwiYW5pbWF0ZU91dCIsIkdTQVAiLCJkZWxheSIsInRvIiwiZHVyYXRpb24iLCJlYXNlIiwic3RhZ2dlciIsInkiLCJhdXRvQWxwaGEiLCJjYWxsIiwiZGVzdHJveSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==