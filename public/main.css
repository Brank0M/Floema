/*!*****************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/main.scss ***!
  \*****************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.home_link_icon, .home_gallery, .detail_button_icon, .detail_media_image, .collections_content, .collections_gallery_media_image, .collections_gallery, .collections_wrapper, .about_highlight_media_image, .about_gallery_media_image, .about_content_media_image, .navigation, .preloader, .content, body, html, .home, .detail, .collections, .about {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.home, .detail, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dc.ac {
  z-index: 99999 !important;
}

.detail_information_item_title, .detail_information_collection, .about_highlight_label, .about_content_label, .home_title_label, .collections_title_label {
  font-size: 1.2rem;
}
@media (max-width: 767px) {
  .detail_information_item_title, .detail_information_collection, .about_highlight_label, .about_content_label, .home_title_label, .collections_title_label {
    font-size: 3rem;
  }
}

.home_link, .detail_button, .preloader_number {
  font-size: 1.4rem;
}
@media (max-width: 767px) {
  .home_link, .detail_button, .preloader_number {
    font-size: 3rem;
  }
}

.detail_information_item_description, .detail_information_highlights_text, .collections_article_description, body {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}
@media (max-width: 767px) {
  .detail_information_item_description, .detail_information_highlights_text, .collections_article_description, body {
    font-size: 2.8rem;
  }
}

.navigation_list_link {
  font-family: "George X";
  font-size: 2rem;
}
@media (max-width: 767px) {
  .navigation_list_link {
    font-size: 4.8rem;
  }
}

.detail_information_link {
  font-family: "George X";
  font-size: 3rem;
}
@media (max-width: 767px) {
  .detail_information_link {
    font-size: 5.2rem;
  }
}

.preloader_text span span {
  font-family: "George X";
  font-size: 5.3rem;
  line-height: 1;
}

.collections_article_title {
  font-family: "George X";
  font-size: 6rem;
}

.about_title {
  font-family: "George X";
  font-size: 10rem;
  line-height: 1;
}
@media (max-width: 767px) {
  .about_title {
    font-size: 12rem;
  }
}

.detail_information_title {
  font-family: "George X";
  font-size: 12rem;
  line-height: 0.82;
}
@media (max-width: 767px) {
  .detail_information_title {
    font-size: 18rem;
  }
}

.about_highlight_title, .home_title_title, .collections_titles_title {
  font-family: "George X";
  font-size: 20rem;
}

.home_titles, .collections_titles {
  display: flex;
  position: absolute;
  top: 50%;
  left: 50%;
  align-items: center;
  transform: translate(-50%, -50%) rotate(-90deg);
}

.home_title_label, .collections_title_label {
  margin: 0 3rem;
  text-align: center;
  text-transform: uppercase;
  transform: rotate(90deg);
  letter-spacing: 0.1rem;
}
@media (max-width: 767px) {
  .home_title_label, .collections_title_label {
    font-size: 1.2rem;
  }
}

.home_title_title, .collections_titles_title {
  padding-top: 2rem;
}

@font-face {
  font-family: "George X";
  src: url(george-x-regular.8c16634b3480c8f74241..woff2) format("woff2"), url(george-x-regular.7a3c3b9686cfe8fe0c44..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-regular.9334a254e34b024bcd02..woff2) format("woff2"), url(suisse-bp-regular.c09a80eb29c885da2c5c..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-ultralight.314abc71a5d83f20639f..woff2) format("woff2"), url(suisse-bp-ultralight.2432259194c3a7ccc381..woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suisse-bp-light.79400e9f4724de7b7da4..woff2) format("woff2"), url(suisse-bp-light.9c220cdf8e6c3e015392..woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
*,
*::after,
*::before {
  box-sizing: border-box;
}

html {
  font-size: 0.5208333333vw;
  line-height: 1;
  position: fixed;
  overflow: hidden;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Suisse BP";
  position: fixed;
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

img {
  vertical-align: middle;
}

[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

.preloader {
  background: #c97164;
  color: #F9F1E7;
  text-align: center;
  z-index: 3;
}

.preloader_text {
  font-size: 0;
  max-width: 66rem;
}
.preloader_text span {
  display: inline-block;
  overflow: hidden;
}
.preloader_number {
  position: absolute;
  overflow: hidden;
  bottom: 7.3rem;
  left: 50%;
  transform: translateX(-50%);
}
@media (max-width: 767px) {
  .preloader_number {
    font-size: 2.4rem;
  }
}

.preloader_number_text {
  display: inline-block;
}

.navigation {
  color: #F9F1E7;
  pointer-events: none;
  position: fixed;
  z-index: 2;
}

.navigation_link {
  font-size: 0;
  position: absolute;
  pointer-events: auto;
  left: 4rem;
  top: 4rem;
  height: 2rem;
  width: 12.8rem;
}
@media (max-width: 767px) {
  .navigation_link {
    left: 5rem;
    top: 5rem;
    width: 27.9rem;
    height: 4.3rem;
  }
}

.navigation__link_icon {
  display: block;
}

.navigation_list_item {
  position: absolute;
  pointer-events: auto;
  right: 4rem;
  top: 4rem;
}

.navigation_list_link {
  display: block;
}

.about {
  background: #B2B8C3;
  color: #37384C;
  opacity: 0;
}

.about_wrapper {
  padding-top: 10rem;
}

.about_title {
  margin: auto;
  max-width: 126rem;
  text-align: center;
}
@media (max-width: 767px) {
  .about_title {
    max-width: 67.7rem;
  }
}

.about_content {
  display: flex;
  position: relative;
  justify-content: center;
  margin: 20rem auto;
}
.about_content:first-child {
  margin-top: 0;
}
.about_content:last-child {
  margin-bottom: 0;
}
.about_content:nth-child(5) {
  justify-content: flex-end;
}
.about_content:nth-child(8) {
  justify-content: flex-start;
}
@media (max-width: 767px) {
  .about_content:nth-child(5) {
    justify-content: flex-end;
  }
  .about_content:nth-child(8) {
    justify-content: flex-start;
  }
}

.about_content_wrapper {
  display: flex;
}
.about_content--right .about_content_wrapper {
  flex-direction: row-reverse;
}
@media (max-width: 767px) {
  .about_content:nth-child(3) .about_content_wrapper {
    flex-direction: column-reverse;
  }
  .about_content:nth-child(5) .about_content_wrapper {
    flex-direction: column;
  }
  .about_content:nth-child(8) .about_content_wrapper {
    flex-direction: column-reverse;
  }
  .about_content:nth-child(9) .about_content_wrapper {
    flex-direction: column-reverse;
  }
}

.about_content_box {
  display: flex;
}
@media (max-width: 767px) {
  .about_content_box {
    width: 60.9rem;
    margin: auto;
  }
  .about_content:nth-child(3) .about_content_box {
    margin-top: 10rem;
  }
  .about_content:nth-child(5) .about_content_box {
    margin-bottom: 10rem;
  }
  .about_content:nth-child(8) .about_content_box {
    margin-top: 10rem;
  }
  .about_content:nth-child(9) .about_content_box {
    margin-top: 10rem;
  }
}

.about_content_label {
  width: 18rem;
  text-transform: uppercase;
}
@media (max-width: 767px) {
  .about_content_label {
    font-size: 2.4rem;
    padding-right: 2.5rem;
    width: 15rem;
  }
}

.about_content_description {
  width: 36.2rem;
}
.about_content_description p:not(:first-child) {
  margin-top: 2.5rem;
}
@media (max-width: 767px) {
  .about_content_description {
    width: calc(100% - 15rem);
  }
}

.about_content_media {
  position: relative;
}
.about_content:nth-child(3) .about_content_media {
  margin-left: 18rem;
  height: 88.8rem;
  width: 53.8rem;
}
.about_content:nth-child(5) .about_content_media {
  margin-left: 18rem;
  height: 60rem;
  width: 96rem;
}
.about_content:nth-child(8) .about_content_media {
  margin-right: 12rem;
  height: 57rem;
  width: 84.2rem;
}
.about_content:nth-child(9) .about_content_media {
  margin-left: 22rem;
  height: 85.8rem;
  width: 60.8rem;
}
@media (max-width: 767px) {
  .about_content:nth-child(3) .about_content_media {
    margin-left: 0;
    width: 60.9rem;
    height: 91.4rem;
  }
  .about_content:nth-child(5) .about_content_media {
    height: 50rem;
    margin-left: 0;
    width: 100vw;
  }
  .about_content:nth-child(8) .about_content_media {
    margin-right: 0;
    height: 57rem;
    width: 100vw;
  }
  .about_content:nth-child(9) .about_content_media {
    margin-left: 0;
    height: 85.8rem;
    width: 60.8rem;
  }
}

.about_content_media_image {
  object-fit: cover;
}

.about_gallery {
  position: relative;
  margin: 20rem 0;
  height: 58.6rem;
  overflow: hidden;
}
.about_gallery:first-child {
  margin-top: 0;
}
.about_gallery:last-child {
  margin-bottom: 0;
}

.about_gallery_wrapper {
  display: flex;
  position: absolute;
  align-items: center;
  top: 50%;
  transform: translate(-50%);
}

.about_gallery_media {
  position: relative;
  margin: 0 4rem;
  height: 43.7rem;
  width: 30.9rem;
}

.about_gallery_media_image {
  object-fit: cover;
}

.about_highlight {
  margin: 20rem 0;
}
.about_highlight:first-child {
  margin-top: 0;
}
.about_highlight:last-child {
  margin-bottom: 0;
}

.about_highlight_wrapper {
  position: relative;
  height: 104rem;
  width: 144rem;
  margin: auto;
}
@media (max-width: 767px) {
  .about_highlight_wrapper {
    height: 316.2rem;
    width: 100%;
  }
  .about_highlight:nth-child(4) .about_highlight_wrapper {
    height: 119.3rem;
    width: 100%;
  }
}

.about_highlight_label {
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  top: 9rem;
  transform: translateX(-50%);
  text-align: center;
  letter-spacing: 0.1rem;
  width: 9.6rem;
}
@media (max-width: 767px) {
  .about_highlight_label {
    font-size: 2.4rem;
    margin-top: 6.5rem;
    width: 19rem;
    top: 90rem;
  }
}

.about_highlight_title {
  position: absolute;
  padding-bottom: 2rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
}
@media (max-width: 767px) {
  .about_highlight_title {
    font-size: 30rem;
    margin-top: 6.5rem;
  }
}

.about_highlight_media {
  position: absolute;
  height: 76rem;
  width: 54rem;
}
.about_highlight:nth-child(4) .about_highlight_media {
  height: 52.8rem;
  width: 36rem;
}
.about_highlight_media:first-child {
  top: 0;
  left: 0;
}
.about_highlight_media:last-child {
  bottom: 0;
  right: 0;
}
@media (max-width: 767px) {
  .about_highlight:last-child .about_highlight_media {
    height: 76rem;
    width: 54rem;
  }
  .about_highlight:last-child .about_highlight_media {
    left: 50%;
    transform: translateX(-50%);
  }
}

.about_highlight_media_image {
  object-fit: cover;
}

.collections {
  background: #BC978C;
  color: #F9F1E7;
}

.collections_wrapper {
  overflow: hidden;
}

@media (max-width: 767px) {
  .collections_titles {
    display: none;
  }
}

.collections_gallery_wrapper {
  display: flex;
  align-items: center;
  top: 50%;
  position: absolute;
  transform: translateY(-50%);
}

.collections_gallery_link {
  display: block;
  margin: 0 5.3rem;
}

.collections_gallery_media {
  position: relative;
  height: 63.1rem;
  width: 44.7rem;
}

.collections_gallery_media_image {
  object-fit: cover;
}

@media (max-width: 767px) {
  .collections_content {
    display: none;
  }
}

.collections_article {
  position: absolute;
  left: 8rem;
  bottom: 8rem;
  opacity: 0;
}
.collections_article--active {
  opacity: 1;
}

.collections_article_description {
  max-width: 44rem;
}

.collections_mobile {
  display: flex;
  position: absolute;
  bottom: 5rem;
}

.collections_mobile_item {
  width: 100vw;
  padding-left: 5rem;
}

.collections_mobile_item_label {
  font-size: 2rem;
  letter-spacing: 0.1rem;
  text-transform: uppercase;
}

.collections_mobile_item_title {
  font-size: 12rem;
  font-family: "George X";
}

.detail {
  background: #BC978C;
  color: #F9F1E7;
}
@media (max-width: 767px) {
  .detail {
    height: auto;
  }
}

.detail_wrapper {
  display: flex;
  align-items: center;
}
@media (max-width: 767px) {
  .detail_wrapper {
    display: block;
    margin: 0 auto 7.8rem;
    width: 100%;
    padding: 15rem 0 31.5rem;
  }
}

.detail_media {
  position: relative;
  height: 78.2rem;
  width: 55.4rem;
}
@media (max-width: 767px) {
  .detail_media {
    margin: 0 auto 7.8rem;
    width: 66.1rem;
    height: 93.4rem;
  }
}

.detail_media_image {
  object-fit: cover;
}

.detail_information {
  padding-left: 8.2rem;
}
@media (max-width: 767px) {
  .detail_information {
    padding-left: 3rem;
  }
}

.detail_information_collection {
  margin-bottom: 4rem;
  text-transform: uppercase;
}

.detail_information_title {
  max-width: 60rem;
}

.detail_information_content {
  padding-left: 18rem;
}
@media (max-width: 767px) {
  .detail_information_content {
    padding-left: 0;
  }
}

.detail_information_highlights {
  margin-top: 6rem;
}

.detail_information_highlight {
  display: flex;
  align-items: center;
}
.detail_information_highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail_information_highlight_icon {
  border: 1px solid currentColor;
  border-radius: 50%;
  height: 4rem;
  margin-right: 3.75rem;
  width: 4rem;
}
@media (max-width: 767px) {
  .detail_information_highlight_icon {
    margin-right: 5.8rem;
    height: 9.2rem;
    width: 9.2rem;
  }
}

.detail_information_list {
  margin-top: 4rem;
}

.detail_information_item {
  display: flex;
}
.detail_information_item:not(:first-child) {
  margin-top: 4rem;
}

.detail_information_item_title {
  padding-right: 2.5rem;
  width: 10rem;
}
@media (max-width: 767px) {
  .detail_information_item_title {
    padding-right: 5rem;
    width: 15rem;
  }
}

.detail_information_item_description {
  max-width: 44rem;
  letter-spacing: 0.03rem;
}

.detail_information_link {
  display: inline-block;
  margin-top: 3rem;
}

.detail_button {
  display: flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  left: 50%;
  bottom: 5rem;
  width: 12.4rem;
  height: 6rem;
  transform: translateX(-50%);
  z-index: 2;
}
@media (max-width: 767px) {
  .detail_button {
    height: 13rem;
    width: 26.8rem;
    bottom: 12rem;
  }
}

span {
  display: inline-block;
  position: relative;
  vertical-align: middle;
}

.home {
  background: #c97164;
  color: #F9F1E7;
  overflow: hidden;
  text-align: center;
}
.home::before, .home::after {
  content: "";
  position: absolute;
  left: 0;
  height: 24rem;
  width: 100%;
  z-index: 1;
}
.home::before {
  background: linear-gradient(to bottom, #c97164 0%, rgba(201, 113, 100, 0) 100%);
  top: 0;
}
.home::after {
  background: linear-gradient(to top, #c97164 0%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
}

.home_gallery {
  visibility: hidden;
}

.home_gallery_media {
  position: absolute;
}

.home_link {
  display: flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  text-transform: uppercase;
  letter-spacing: 0.05rem;
  height: 6rem;
  width: 28.8rem;
  z-index: 2;
}
@media (max-width: 767px) {
  .home_link {
    bottom: 7.5rem;
    width: 55rem;
    height: 13.7rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/