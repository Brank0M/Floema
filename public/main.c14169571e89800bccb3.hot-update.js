/*! For license information please see main.c14169571e89800bccb3.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});var i=s("./node_modules/gsap/index.js"),n=s("./node_modules/prefix/index.js"),l=s.n(n),r=s("./node_modules/lodash/each.js"),o=s.n(r);class h{constructor({element:e,elements:t,id:s}){this.selector=e,this.selectorChildren={...t},this.id=s,this.transformPrefix=l()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this),console.log(this.transformPrefix)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},o()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e))),console.log(this.elements[t],e)}))}show(){return new Promise((e=>{this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight)}onMouseWheel(e){const{deltaY:t}=e;console.log(t),this.scroll.target+=t}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current<.01&&(this.scroll.current=0),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"f8654a2aa0954b8ffb67"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jMTQxNjk1NzFlODk4MDBiY2NiMy5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7c1BBSWUsTUFBTUEsRUFDbkJDLGFBQVksUUFBRUMsRUFBTyxTQUFFQyxFQUFRLEdBQUVDLElBQy9CQyxLQUFLQyxTQUFXSixFQUNoQkcsS0FBS0UsaUJBQW1CLElBQ25CSixHQUdMRSxLQUFLRCxHQUFLQSxFQUNWQyxLQUFLRyxnQkFBa0JDLElBQU8sYUFTOUJKLEtBQUtLLGtCQUFvQkwsS0FBS00sYUFBYUMsS0FBS1AsTUFFaERRLFFBQVFDLElBQUlULEtBQUtHLGdCQUNuQixDQUVBTyxTQUNFVixLQUFLSCxRQUFVYyxTQUFTQyxjQUFjWixLQUFLQyxVQUMzQ0QsS0FBS0YsU0FBVyxDQUFDLEVBRWpCRSxLQUFLYSxPQUFTLENBQ1pDLFFBQVMsRUFDVEMsT0FBUSxFQUNSQyxLQUFNLEVBQ05DLE1BQU8sR0FHVEMsSUFBS2xCLEtBQUtFLGtCQUFrQixDQUFDaUIsRUFBT0MsS0FFaENELGFBQWlCRSxPQUFPQyxhQUN4QkgsYUFBaUJFLE9BQU9FLFVBQ3hCQyxNQUFNQyxRQUFRTixHQUVkbkIsS0FBS0YsU0FBU3NCLEdBQU9ELEdBRXJCbkIsS0FBS0YsU0FBU3NCLEdBQU9ULFNBQVNlLGlCQUFpQlAsR0FFYixJQUE5Qm5CLEtBQUtGLFNBQVNzQixHQUFLTyxPQUNyQjNCLEtBQUtGLFNBQVNzQixHQUFPLEtBQ2tCLElBQTlCcEIsS0FBS0YsU0FBU3NCLEdBQUtPLFNBQzVCM0IsS0FBS0YsU0FBU3NCLEdBQU9ULFNBQVNDLGNBQWNPLEtBSWhEWCxRQUFRQyxJQUFJVCxLQUFLRixTQUFTc0IsR0FBTUQsRUFBTSxHQUUxQyxDQUVBUyxPQUNFLE9BQU8sSUFBSUMsU0FBU0MsSUFDbEI5QixLQUFLK0IsWUFBY0MsRUFBQUEsUUFBQUEsV0FDbkJoQyxLQUFLK0IsWUFBWUUsT0FDZmpDLEtBQUtILFFBQ0wsQ0FDRXFDLFVBQVcsR0FFYixDQUNFQSxVQUFXLElBSWZsQyxLQUFLK0IsWUFBWUksTUFBTUMsSUFDckJwQyxLQUFLcUMsb0JBQ0xQLEdBQVMsR0FDVCxHQUVOLENBRUFRLE9BQ0UsT0FBTyxJQUFJVCxTQUFTQyxJQUNsQjlCLEtBQUt1Qyx1QkFDTHZDLEtBQUt3QyxhQUFlUixFQUFBQSxRQUFBQSxXQUNwQmhDLEtBQUt3QyxhQUFhQyxHQUFHekMsS0FBS0gsUUFBUyxDQUNqQ3FDLFVBQVcsRUFDWFEsV0FBWVosR0FDWixHQUVOLENBRUFhLFdBQ00zQyxLQUFLRixTQUFTOEMsVUFDaEI1QyxLQUFLYSxPQUFPSSxNQUNWakIsS0FBS0YsU0FBUzhDLFFBQVFDLGFBQWV4QixPQUFPeUIsWUFFbEQsQ0FFQXhDLGFBQWF5QyxHQUNYLE1BQU0sT0FBRUMsR0FBV0QsRUFFbkJ2QyxRQUFRQyxJQUFJdUMsR0FDWmhELEtBQUthLE9BQU9FLFFBQVVpQyxDQUN4QixDQUVBQyxTQUNFakQsS0FBS2EsT0FBT0UsT0FBU2lCLEVBQUFBLFFBQUFBLE1BQUFBLE1BQ25CLEVBQ0FoQyxLQUFLYSxPQUFPSSxNQUNaakIsS0FBS2EsT0FBT0UsUUFHZGYsS0FBS2EsT0FBT0MsUUFBVWtCLEVBQUFBLFFBQUFBLE1BQUFBLFlBQ3BCaEMsS0FBS2EsT0FBT0MsUUFDWmQsS0FBS2EsT0FBT0UsT0FDWixJQUdFZixLQUFLYSxPQUFPQyxRQUFVLE1BQ3hCZCxLQUFLYSxPQUFPQyxRQUFVLEdBR3BCZCxLQUFLRixTQUFTOEMsVUFDaEI1QyxLQUFLRixTQUFTOEMsUUFBUU0sTUFDcEJsRCxLQUFLRyxpQkFDRixlQUFjSCxLQUFLYSxPQUFPQyxhQUVuQyxDQUVBdUIsb0JBQ0VoQixPQUFPOEIsaUJBQWlCLGFBQWNuRCxLQUFLSyxrQkFDN0MsQ0FFQWtDLHVCQUNFbEIsT0FBTytCLG9CQUFvQixhQUFjcEQsS0FBS0ssa0JBQ2hELGtCQ3JJRmdELEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY2xhc3Nlcy9QYWdlLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdTQVAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IFByZWZpeCBmcm9tIFwicHJlZml4XCI7XHJcbmltcG9ydCBlYWNoIGZyb20gXCJsb2Rhc2gvZWFjaFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnZSB7XHJcbiAgY29uc3RydWN0b3IoeyBlbGVtZW50LCBlbGVtZW50cywgaWQgfSkge1xyXG4gICAgdGhpcy5zZWxlY3RvciA9IGVsZW1lbnQ7XHJcbiAgICB0aGlzLnNlbGVjdG9yQ2hpbGRyZW4gPSB7XHJcbiAgICAgIC4uLmVsZW1lbnRzLFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmlkID0gaWQ7XHJcbiAgICB0aGlzLnRyYW5zZm9ybVByZWZpeCA9IFByZWZpeChcInRyYW5zZm9ybVwiKTtcclxuXHJcbiAgICAvLyB0aGlzLnNjcm9sbCA9IHtcclxuICAgIC8vICAgY3VycmVudDogMCxcclxuICAgIC8vICAgdGFyZ2V0OiAwLFxyXG4gICAgLy8gICBsYXN0OiAwLFxyXG4gICAgLy8gICBsaW1pdDogMTAwMCxcclxuICAgIC8vIH07XHJcblxyXG4gICAgdGhpcy5vbk1vdXNlV2hlZWxFdmVudCA9IHRoaXMub25Nb3VzZVdoZWVsLmJpbmQodGhpcyk7XHJcblxyXG4gICAgY29uc29sZS5sb2codGhpcy50cmFuc2Zvcm1QcmVmaXgpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlKCkge1xyXG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnNlbGVjdG9yKTtcclxuICAgIHRoaXMuZWxlbWVudHMgPSB7fTtcclxuXHJcbiAgICB0aGlzLnNjcm9sbCA9IHtcclxuICAgICAgY3VycmVudDogMCxcclxuICAgICAgdGFyZ2V0OiAwLFxyXG4gICAgICBsYXN0OiAwLFxyXG4gICAgICBsaW1pdDogMCxcclxuICAgIH07XHJcblxyXG4gICAgZWFjaCh0aGlzLnNlbGVjdG9yQ2hpbGRyZW4sIChlbnRyeSwga2V5KSA9PiB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fFxyXG4gICAgICAgIGVudHJ5IGluc3RhbmNlb2Ygd2luZG93Lk5vZGVMaXN0IHx8XHJcbiAgICAgICAgQXJyYXkuaXNBcnJheShlbnRyeSlcclxuICAgICAgKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZW50cnk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbnRyeSk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnRzW2tleV0ubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBudWxsO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5lbGVtZW50c1trZXldLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlbnRyeSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmVsZW1lbnRzW2tleV0sIGVudHJ5KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc2hvdygpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICB0aGlzLmFuaW1hdGlvbkluID0gR1NBUC50aW1lbGluZSgpO1xyXG4gICAgICB0aGlzLmFuaW1hdGlvbkluLmZyb21UbyhcclxuICAgICAgICB0aGlzLmVsZW1lbnQsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgYXV0b0FscGhhOiAwLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgYXV0b0FscGhhOiAxLFxyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuXHJcbiAgICAgIHRoaXMuYW5pbWF0aW9uSW4uY2FsbCgoXykgPT4ge1xyXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBoaWRlKCkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XHJcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgdGhpcy5hbmltYXRpb25PdXQgPSBHU0FQLnRpbWVsaW5lKCk7XHJcbiAgICAgIHRoaXMuYW5pbWF0aW9uT3V0LnRvKHRoaXMuZWxlbWVudCwge1xyXG4gICAgICAgIGF1dG9BbHBoYTogMCxcclxuICAgICAgICBvbkNvbXBsZXRlOiByZXNvbHZlLFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgb25SZXNpemUoKSB7XHJcbiAgICBpZiAodGhpcy5lbGVtZW50cy53cmFwcGVyKSB7XHJcbiAgICAgIHRoaXMuc2Nyb2xsLmxpbWl0ID1cclxuICAgICAgICB0aGlzLmVsZW1lbnRzLndyYXBwZXIuY2xpZW50SGVpZ2h0IC0gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgb25Nb3VzZVdoZWVsKGV2ZW50KSB7XHJcbiAgICBjb25zdCB7IGRlbHRhWSB9ID0gZXZlbnQ7XHJcblxyXG4gICAgY29uc29sZS5sb2coZGVsdGFZKTtcclxuICAgIHRoaXMuc2Nyb2xsLnRhcmdldCArPSBkZWx0YVk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoKSB7XHJcbiAgICB0aGlzLnNjcm9sbC50YXJnZXQgPSBHU0FQLnV0aWxzLmNsYW1wKFxyXG4gICAgICAwLFxyXG4gICAgICB0aGlzLnNjcm9sbC5saW1pdCxcclxuICAgICAgdGhpcy5zY3JvbGwudGFyZ2V0XHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKFxyXG4gICAgICB0aGlzLnNjcm9sbC5jdXJyZW50LFxyXG4gICAgICB0aGlzLnNjcm9sbC50YXJnZXQsXHJcbiAgICAgIDAuMVxyXG4gICAgKTtcclxuXHJcbiAgICBpZiAodGhpcy5zY3JvbGwuY3VycmVudCA8IDAuMDEpIHtcclxuICAgICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuZWxlbWVudHMud3JhcHBlcikge1xyXG4gICAgICB0aGlzLmVsZW1lbnRzLndyYXBwZXIuc3R5bGVbXHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1QcmVmaXhcclxuICAgICAgXSA9IGB0cmFuc2xhdGVZKC0ke3RoaXMuc2Nyb2xsLmN1cnJlbnR9cHgpYDsgLy8gdGhpcy5zY3JvbGwuY3VycmVudFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYWRkRXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNld2hlZWxcIiwgdGhpcy5vbk1vdXNlV2hlZWxFdmVudCk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVFdmVudExpc3RlbmVycygpIHtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2V3aGVlbFwiLCB0aGlzLm9uTW91c2VXaGVlbEV2ZW50KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIDAuMjMuNDloIHN0b3BwZWQhXHJcbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImY4NjU0YTJhYTA5NTRiOGZmYjY3XCIpIl0sIm5hbWVzIjpbIlBhZ2UiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJlbGVtZW50cyIsImlkIiwidGhpcyIsInNlbGVjdG9yIiwic2VsZWN0b3JDaGlsZHJlbiIsInRyYW5zZm9ybVByZWZpeCIsIlByZWZpeCIsIm9uTW91c2VXaGVlbEV2ZW50Iiwib25Nb3VzZVdoZWVsIiwiYmluZCIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzY3JvbGwiLCJjdXJyZW50IiwidGFyZ2V0IiwibGFzdCIsImxpbWl0IiwiZWFjaCIsImVudHJ5Iiwia2V5Iiwid2luZG93IiwiSFRNTEVsZW1lbnQiLCJOb2RlTGlzdCIsIkFycmF5IiwiaXNBcnJheSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJzaG93IiwiUHJvbWlzZSIsInJlc29sdmUiLCJhbmltYXRpb25JbiIsIkdTQVAiLCJmcm9tVG8iLCJhdXRvQWxwaGEiLCJjYWxsIiwiXyIsImFkZEV2ZW50TGlzdGVuZXJzIiwiaGlkZSIsInJlbW92ZUV2ZW50TGlzdGVuZXJzIiwiYW5pbWF0aW9uT3V0IiwidG8iLCJvbkNvbXBsZXRlIiwib25SZXNpemUiLCJ3cmFwcGVyIiwiY2xpZW50SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJldmVudCIsImRlbHRhWSIsInVwZGF0ZSIsInN0eWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=